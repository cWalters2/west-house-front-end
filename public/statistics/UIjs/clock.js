function drawClock(svg, w, h) {  var clockGroup, fields, offSetX, offSetY, pi, render, scaleHours, scaleMins, scaleSecs, vis, w, h;    var month=new Array();    month[0]="Jan";    month[1]="Feb";    month[2]="Mar";    month[3]="Apr";    month[4]="May";    month[5]="June";    month[6]="July";    month[7]="Aug";    month[8]="Sept";    month[9]="Oct";    month[10]="Nov";    month[11]="Dec";  fields = function() {    var currentTime, data, hour, minute, second;    currentTime = new Date();    second = currentTime.getSeconds();    minute = currentTime.getMinutes();    hour = currentTime.getHours() + minute / 60;    return data = [      {        "unit": "seconds",        "numeric": second      }, {        "unit": "minutes",        "numeric": minute      }, {        "unit": "hours",        "numeric": hour      }    ];  };  offSetX = w*194/198;  offSetY = h*4/147;  h = h;  w = w;  pi = Math.PI;  scaleSecs = d3.scale.linear().domain([1, 60 + 999 / 1000]).range([0, 2 * pi]);  scaleMins = d3.scale.linear().domain([0, 59 + 59 / 60]).range([0, 2 * pi]);  scaleHours = d3.scale.linear().domain([0, 11 + 59 / 60]).range([0, 2 * pi]);    vis = svg;  clockGroup = vis.append("svg:g").attr("transform", "translate(" + offSetX + "," + offSetY + ")").attr("class", "clock");  clockGroup.append("svg:circle").attr("r", w*3.4/198).attr("fill", "none").attr("class", "clock outercircle").attr("stroke", "#878986").attr("stroke-width", 2);  clockGroup.append("svg:circle").attr("r", 2).attr("fill", "#878986").attr("class", "clock innercircle");   // var datestring = month[currentTime.getMonth()] + " " + currentTime.getDate() + ", " + currentTime.getFullYear();  //clockGroup.append("svg:text").attr("x", -30).attr("y", 40).text(datestring).attr("font-size", 0.2*h/20).attr("font-family", "sans-serif");  render = function(data) {    var hourArc, minuteArc, secondArc;    clockGroup.selectAll(".clockhand").remove();    secondArc = d3.svg.arc().innerRadius(0).outerRadius(w*3/198).startAngle(function(d) {      return scaleSecs(d.numeric);    }).endAngle(function(d) {      return scaleSecs(d.numeric);    });    minuteArc = d3.svg.arc().innerRadius(0).outerRadius(w*3/198).startAngle(function(d) {      return scaleMins(d.numeric);    }).endAngle(function(d) {      return scaleMins(d.numeric);    });    hourArc = d3.svg.arc().innerRadius(0).outerRadius(w*2.7/198).startAngle(function(d) {      return scaleHours(d.numeric % 12);    }).endAngle(function(d) {      return scaleHours(d.numeric % 12);    });    return clockGroup.selectAll(".clockhand").data(data).enter().append("svg:path").attr("d", function(d) {      if (d.unit === "seconds") {        return secondArc(d);      } else if (d.unit === "minutes") {        return minuteArc(d);      } else if (d.unit === "hours") {        return hourArc(d);      }    }).attr("class", "clockhand").attr("stroke", "#878986").attr("stroke-width", function(d) {      if (d.unit === "seconds") {        return 1;      } else if (d.unit === "minutes") {        return 2;      } else if (d.unit === "hours") {        return 2;      }    }).attr("fill", "none");  };  setInterval(function() {    var data;    data = fields();    //console.log(data[2].numeric + ":" + data[1].numeric + ":" + data[0].numeric);    return render(data);  }, 1000);}